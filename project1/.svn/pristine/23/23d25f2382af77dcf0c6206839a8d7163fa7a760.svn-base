package semiProject;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.swing.JOptionPane;

import semiProject.OrderDTO;


//DAO 클래스 : 데이타 저장소를 이용하여 데이타 삽입,삭제,변경,검색 기능을 제공하는 클래스

//PHONEBOOK 테이블의 행 삽입,삭제,변경,검색 기능의 메소드를 제공하는 클래스
// => 싱글톤 클래스로 작성하는 것을 권장
public class OrderDAO extends JdbcDAO {
	private static OrderDAO _dao;
	
	private OrderDAO() {
		// TODO Auto-generated constructor stub
	}
	
	static {
		_dao=new OrderDAO();
	}
	
	public static OrderDAO getDAO() {
		return _dao;
	}
	
	public void insertorder(OrderDTO order) throws SQLException {
		Connection con = null;
		PreparedStatement pstmt = null;

		try {
			con =getConnection();
			
			con.setAutoCommit(false);
			String query = "insert into ordertable values(ordertable_seq.nextval,sysdate,'test',?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
			pstmt = con.prepareStatement(query);
			//pstmt.setString(1, order.getId());
			pstmt.setString(1, order.getHairType());
			pstmt.setString(2, order.getHairBold());
			pstmt.setString(3, order.getHairDamage());
			pstmt.setString(4, order.getHeadType());
			pstmt.setString(5, order.getProductFuntion());
			pstmt.setString(6, order.getShampooColor());
			pstmt.setString(7, order.getConditionColor());
			pstmt.setString(8, order.getSmell());
			pstmt.setString(9, order.getSmellPower());
			pstmt.setString(10, order.getCodeName());
			pstmt.setString(11, order.getHashTagOne());
			pstmt.setString(12, order.getHashTagTwo());
			pstmt.setString(13, order.getHashTagThree());
			pstmt.setString(14, order.getProSelect());
			pstmt.executeUpdate();
			con.commit();
		} catch (Exception e) {
			con.rollback();
			System.out.println("[에러] qryInsert() 메소드의 SQL 오류" + e.getMessage());
		} finally {
			close(con, pstmt);
		}
	}

	
	//PHONEBOOK 테이블에 저장된 모든 행을 검색하여 반환하는 메소드
//	public List<OrderDTO> getordertableList() {
//		Connection con=null;
//		PreparedStatement pstmt=null;
//		ResultSet rs=null;
//		List<OrderDTO> ordertableList=new ArrayList<OrderDTO>();
//		try {
//			con=getConnection();
//			
//			String sql="insert into ordertable values(ordertable_seq.nextval,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
//			pstmt=con.prepareStatement(sql);
//			
//			rs=pstmt.executeQuery();
//			
//			//다수의 검색행을 List 인스턴스로 변환
//			while(rs.next()) {
//				//DTO 인스턴스 생성
//				OrderDTO ordertable=new OrderDTO();
//				//검색행의 컬럼값을 이용하여 DTO 인스턴스의 필드값 변경
//				ordertable.setNo(rs.getInt("no"));
//				ordertable.setOrderDate(rs.getDate("orderDate"));
//				ordertable.setId(rs.getString("id"));
//				ordertable.setHairType(rs.getString("hairType"));
//				ordertable.setHairBold(rs.getString("hairBold"));
//				ordertable.setHairDamage(rs.getString("hairDamage"));
//				ordertable.setHeadType(rs.getString("headType"));
//				ordertable.setProductFuntion(rs.getString("productFuntion"));
//				ordertable.setShampooColor(rs.getString("shampooColor"));
//				ordertable.setConditionColor(rs.getString("conditionColor"));
//				ordertable.setSmell(rs.getString("smell"));
//				ordertable.setSmellPower(rs.getString("smellPower"));
//				ordertable.setCodeName(rs.getString("codeName"));
//				ordertable.setHashTagOne(rs.getString("hashTagOne"));
//				ordertable.setHashTagTwo(rs.getString("hashTagTwo"));
//				ordertable.setHashTagThree(rs.getString("hashTagThree"));
//				ordertable.setProSelect(rs.getString("proSelect"));
//				//DTO 인스턴스를 List 인스턴스에 추가
//				ordertableList.add(ordertable);
//			}
//		} catch (SQLException e) {
//			System.out.println("[에러]getPhonebookList() 메소드의 SQL 오류 = "+e.getMessage());
//		} finally {
//			close(con, pstmt, rs);
//		}
//		return ordertableList;
//	}
}


